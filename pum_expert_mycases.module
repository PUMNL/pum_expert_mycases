<?php

require_once 'config.inc';
require_once 'menu.inc';

function pum_expert_mycases_views_api() {
    return array('api' => 3.0);
}

function pum_expert_mycases_views_default_views() {
  $files = file_scan_directory(drupal_get_path('module', 'pum_expert_mycases'). '/views', '/.inc/');
  $views = array();
  civicrm_initialize();
  foreach ($files as $filepath => $file) {
    require $filepath;
    if (isset($view)) {
      $views[$view->name] = $view;
    }
  }
  return $views;
}

function pum_expert_mycases_get_role_ids($roles) {
    $rids = array();
    $available_roles = user_roles();
    foreach($roles as $role) {
        $rid = array_search($role, $available_roles);
        if ($rid !== false) {
            $rids[$rid] = $rid;
        }
    }

    return $rids;
}

function pum_expert_mycases_menu() {
    return _pum_expert_mycases_menu();
}

function _pum_expert_has_user_role_on_case($case_id) {
  static $roles = array();
  $case_id = trim($case_id);
  if (isset($roles[$case_id])) {
    return $roles[$case_id];
  }

  $roles[$case_id] = false;
  $session = CRM_Core_Session::singleton();
  $case = civicrm_api3('Case', 'getsingle', array('case_id' => $case_id));
  foreach($case['contacts'] as $contact) {
    if ($contact['contact_id'] == $session->get('userID')) {
      $roles[$case_id] = true;
      break;
    }
  }

  return $roles[$case_id];
}

function pum_expert_mycases_get_mainactivity_follow_up($case_id) {
  $ma = civicrm_api3('MainActivity', 'DebriefingCC', array('case_id' => $case_id));
  return $ma['follow_up'];
}

function pum_expert_mycases_get_mainactivity_summary($case_id) {
  $ma = civicrm_api3('MainActivity', 'DebriefingCC', array('case_id' => $case_id));
  return $ma['summary'];
}