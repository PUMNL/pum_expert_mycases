<?php

require_once 'config.inc';
require_once 'businessconfig.inc';
require_once 'menu.inc';

function pum_expert_mycases_views_api() {
    return array('api' => 3.0);
}

function pum_expert_mycases_preprocess_html(&$vars) {
  if (in_array('page-expert-my-main-activity-history', $vars['classes_array'])
    || in_array('page-expert-see-proposal', $vars['classes_array'])
    || in_array('page-expert-complete-business-programme-visits', $vars['classes_array'])
    || in_array('page-expert-business-programme-proposal', $vars['classes_array'])
  ) {
    $vars['classes_array'][] = 'section-portal';
  }
}

function pum_expert_check_case_for_intake($case_type_id) {
  $config = pum_expert_mycases_config::singleton();
  $sep = CRM_Core_DAO::VALUE_SEPARATOR;
  $case_type = trim(str_replace($sep, ',', $case_type_id), ',');
  $case_types = explode(",", $case_type);
  if (in_array($config->getProjectInatkeCaseTypeId(), $case_types)) {
    return true;
  }
  return false;
}

/**
 * Implements hook_theme_registry_alter().
 */
function pum_expert_mycases_theme_registry_alter(&$theme_registry) {
    // Defined path to the current module.
    $module_path = drupal_get_path('module', 'pum_expert_mycases');
    // Find all .tpl.php files in this module's folder recursively.
    $template_file_objects = drupal_find_theme_templates($theme_registry, '.tpl.php', $module_path);
    // Iterate through all found template file objects.
    foreach ($template_file_objects as $key => $template_file_object) {
        // If the template has not already been overridden by a theme.
        if (!isset($theme_registry[$key]['theme path']) || !preg_match('#/themes/#', $theme_registry[$key]['theme path'])) {
            // Alter the theme path and template elements.
            $theme_registry[$key]['theme path'] = $module_path;
            $theme_registry[$key] = array_merge($theme_registry[$key], $template_file_object);
            $theme_registry[$key]['type'] = 'module';
        }
    }
}

function pum_expert_mycases_views_default_views() {
  $files = file_scan_directory(drupal_get_path('module', 'pum_expert_mycases'). '/views', '/.inc/');
  $views = array();
  civicrm_initialize();
  foreach ($files as $filepath => $file) {
    require $filepath;
    if (isset($view)) {
      $views[$view->name] = $view;
    }
  }
  return $views;
}

function pum_expert_mycases_get_role_ids($roles) {
    $rids = array();
    $available_roles = user_roles();
    foreach($roles as $role) {
        $rid = array_search($role, $available_roles);
        if ($rid !== false) {
            $rids[$rid] = $rid;
        }
    }

    return $rids;
}

function pum_expert_mycases_menu() {
    return _pum_expert_mycases_menu();
}

function _pum_expert_has_user_role_on_case($case_id) {
  static $roles = array();
  $case_id = trim($case_id);
  if (isset($roles[$case_id])) {
    return $roles[$case_id];
  }

  $roles[$case_id] = false;
  $session = CRM_Core_Session::singleton();
  $case = civicrm_api3('Case', 'getsingle', array('case_id' => $case_id));
  foreach($case['contacts'] as $contact) {
    if ($contact['contact_id'] == $session->get('userID')) {
      $roles[$case_id] = true;
      break;
    }
  }

  return $roles[$case_id];
}

/**
 * Return TRUE when the user has a certain drupal role and is has a role on at least one of the cases connected to the project of the specified case_id
 *
 * @param $roles
 * @params $case_id
 * @return bool
 */
function _pum_expert_mycases_user_has_role_on_case_project($case_id) {
  $hasrole = FALSE;

  civicrm_initialize();
  $session = CRM_Core_Session::singleton();
  $contact_id = $session->get('userID');
  $civi_config = CRM_Core_Config::singleton();
  $civi_dsn = DB::parseDSN($civi_config->dsn);
  $civicrm_db = $civi_dsn['database'];

  if (!empty($civicrm_db) && !empty($case_id)) {
    $project_relationships = db_query("SELECT DISTINCT rel.contact_id_b AS 'contact_id', cc.case_id AS 'case_id', rt.label_b_a AS 'rel_description', proj.project_id FROM ".$civicrm_db.".civicrm_case_project cp
                                LEFT JOIN ".$civicrm_db.".civicrm_project p ON p.id = cp.project_id
                                LEFT JOIN ".$civicrm_db.".civicrm_case_project proj ON proj.project_id = p.id
                                LEFT JOIN ".$civicrm_db.".civicrm_relationship rel ON rel.case_id = proj.case_id
                                LEFT JOIN ".$civicrm_db.".civicrm_relationship_type rt ON rt.id = rel.relationship_type_id
                                LEFT JOIN ".$civicrm_db.".civicrm_case_contact cc ON cc.case_id = proj.case_id
                                WHERE cp.case_id = :case_id",
                                array(':case_id'=>check_plain($case_id)))->fetchAll();
  }

  foreach($project_relationships as $rel) {
    if ($rel->contact_id == $contact_id) {
      $hasrole = TRUE;
    }
  }

  return $hasrole;
}

function _pum_expert_show_activity_details($activity_id, $activity_type, $destination) {
  $config = pum_expert_mycases_config::singleton();
  $noDetailsActivityTypes = $config->getNoActivityDetailsList();
  if (!isset($noDetailsActivityTypes[$activity_type])) {
    return 'expert/my-cases/activitiy-detail/' . $activity_id . '?destination=' . $destination;
  }
  else {
    return '';
  }
}

function _pum_rep_show_activity_details($activity_id, $activity_type, $destination) {
  $config = pum_expert_mycases_config::singleton();
  $repActivityTypes = $config->getRepActivityList();
  if (isset($repActivityTypes[$activity_type])) {
    return 'rep/my-cases/activitity-detail/' . $activity_id . '?destination=' . $destination;
  }
  else {
    return '';
  }
}

function _pum_expert_link_to_case_details($case_id, $case_type) {
    $config = pum_expert_mycases_config::singleton();
    $sep = CRM_Core_DAO::VALUE_SEPARATOR;
    $case_type = trim(str_replace($sep, ',', $case_type), ',');
    $case_types = explode(",", $case_type);
    $roles = array('Representative');
    $rep_role_id = pum_expert_mycases_get_role_ids($roles);
    $rep_role_id = reset($rep_role_id);
    if (in_array($config->getProjectInatkeCaseTypeId(), $case_types)) {
      if(user_has_role($rep_role_id)) {
        return 'expert/my-cases/projectintake/' . $case_id;
      } else {
        return false;
      }
    } else {
      if(_pum_expert_mycases_user_has_role_on_case_project($case_id)){
        return 'expert/my-cases/activities/'.$case_id;
      } else {
        return false;
      }
    }
}

function pum_expert_mycases_get_mainactivity_follow_up($case_id) {
  $ma = civicrm_api3('MainActivity', 'DebriefingCC', array('case_id' => $case_id));
  return $ma['follow_up'];
}

function pum_expert_mycases_get_mainactivity_summary($case_id) {
  $ma = civicrm_api3('MainActivity', 'DebriefingCC', array('case_id' => $case_id));
  return $ma['summary'];
}
